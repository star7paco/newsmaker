<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>
	<version>0.0.1</version>

	<groupId>com.s7soft.gae</groupId>
    <artifactId>s7soft</artifactId>

    <properties>
        <app.id>s7soft-1163</app.id>
        <app.version>2</app.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>4.1.3.RELEASE</spring.version>
		<spring.data.jpa>1.3.0.RELEASE</spring.data.jpa>
	</properties>

	<prerequisites>
		<maven>3.1.0</maven>
	</prerequisites>



	<dependencies>
		<!-- 기본으로 생겼던 부분같다 -->
		<!-- Compile/runtime dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>1.9.32</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>



		<!-- Test Dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>1.9.32</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>1.9.32</version>
			<scope>test</scope>
		</dependency>

		<!-- 여기서부터 2번째 -->
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.2.20.RELEASE</version>
		</dependency>

		<!-- 여기가 세번째 db추가였던가.  -->
		<!-- Spring & DB 추가 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring Data JPA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.data.jpa}</version>
		</dependency>


		<!-- db관련 라이브러리 -->
		<!-- Datanucleus -->
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jpa</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-enhancer</artifactId>
			<version>3.1.1</version>
		</dependency>

		<!-- 이것이 있어야 앱엔진에서 datanucleus 를 쓸 수 있다. 2버젼에서 더 이상 개발안하는듯? -->
		<!-- 2버젼이 datanucleus 3버젼대를 지원한다. -->
		<dependency>
			<groupId>com.google.appengine.orm</groupId>
			<artifactId>datanucleus-appengine</artifactId>
			<version>2.1.2</version>
		</dependency>


		<dependency>
		  <!-- jsoup HTML parser library @ http://jsoup.org/ -->
		  <groupId>org.jsoup</groupId>
		  <artifactId>jsoup</artifactId>
		  <version>1.8.3</version>
		</dependency>

		<!-- junit -->
		<!-- Test Dependencies -->
		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
		  <groupId>org.assertj</groupId>
		  <artifactId>assertj-core</artifactId>
		  <!-- use 3.3.0 for Java 8 projects -->
		  <version>2.3.0</version>
		  <scope>test</scope>
		</dependency>

		<!-- log4j
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-log4j12</artifactId>
		    <version>1.7.2</version>
		</dependency>
		-->
	</dependencies>

	<build>
		<!-- for hot reload of the web application -->
		<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>display-dependency-updates</goal>
							<goal>display-plugin-updates</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<version>3.1</version>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<webResources>
						<!-- in order to interpolate version from pom into appengine-web.xml -->
						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>1.9.17</version>
				<configuration>
					<enableJarClasses>false</enableJarClasses>
					<!-- Comment in the below snippet to bind to all IPs instead of just
						localhost -->
					<!-- address>0.0.0.0</address> <port>8080</port -->
					<!-- Comment in the below snippet to enable local debugging with a remove
						debugger like those included with Eclipse or IntelliJ -->
					<!-- jvmFlags> <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag>
						</jvmFlags -->
				</configuration>
			</plugin>

			<!-- Spring & db 추가하면서 넣은 플러그인 enhancer를 위해 쓴다 -->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-maven-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<api>JPA</api>
					<persistenceUnitName>MyUnit</persistenceUnitName>
					<log4jConfiguration>${basedir}/src/main/resources/log4j.properties</log4jConfiguration>
					<verbose>true</verbose>
				</configuration>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
			</plugin>



		</plugins>

	</build>
</project>
